server:
  port: 8080

spring:
  application:
    name: member
---
spring:
  profiles: default
  datasource:
    url: jdbc:sqlserver://airportcopy27.database.windows.net:1433;database=airportcopy27;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    database-platform: org.hibernate.dialect.SQLServerDialect
    hibernate:
      ddl-auto: update
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: member
          destination: airport
          contentType: application/json
        event-out:
          destination: airport
          contentType: application/json
app:                                  # ✅ spring 과 같은 레벨
  mail:
    from: ${APP_MAIL_FROM:${MAIL_USERNAME}}

jwt:
  secret: ${JWT_SECRET}

recaptcha:
  secret: ${CAPTCHA_SECRET}

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8082
---
spring:
  profiles: docker
  datasource:
    url: jdbc:sqlserver://airportcopy27.database.windows.net:1433;database=airportcopy27;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    database-platform: org.hibernate.dialect.SQLServerDialect
    hibernate:
      ddl-auto: none

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  management:
    health:
      mail:
        enabled: false
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: member
          destination: airport
          contentType: application/json
        event-out:
          destination: airport
          contentType: application/json
app:                                  # ✅ spring 과 같은 레벨
  mail:
    from: ${APP_MAIL_FROM:${MAIL_USERNAME}}

jwt:
  secret: ${JWT_SECRET}

recaptcha:
  secret: ${CAPTCHA_SECRET}
