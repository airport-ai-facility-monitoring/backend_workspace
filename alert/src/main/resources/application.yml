server:
  port: 8084

spring:
  application:
    name: alert

# 모든 프로필에 공통적으로 적용될 설정
---
spring:
  config:
    activate:
      on-profile: default
  datasource:
    url: jdbc:sqlserver://airport.database.windows.net:1433;database=airport;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.SQLServer2012Dialect
    hibernate:
      ddl-auto: update
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
          consumer:
            auto-offset-reset: earliest
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: alert
          destination: airport
          contentType: application/json
        event-out:
          destination: airport
          contentType: application/json

# api 호출 주소 (localhost -> 쿠버네티스 서비스 이름)
api:
  url:
    cctv: http://cctv-service:8082
    equipment: http://equipment-service:8083
    alert: http://alert-service:8084
    member: http://member-service:8085
    notification: http://notification-service:8086
    runway: http://runway-service:8087
    schedule: http://schedule-service:8090
    auth: http://auth-service:8089
    gateway: http://gateway-service:8088

logging:
  level:
    org.hibernate.type: info
    org.springframework.cloud: info
    org.springframework.cloud.stream: info
    org.apache.kafka: info
    airport: info
    org.hibernate.tool.hbm2ddl: debug

---
# Docker 환경에서 활성화될 프로필
spring:
  profiles: docker
  datasource:
    url: jdbc:sqlserver://airport.database.windows.net:1433;database=airport;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver

  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
        physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.SQLServer2012Dialect
    hibernate:
      ddl-auto: update

  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092   # ✅ 클러스터 안에서는 서비스 이름 사용
        consumer:
          auto-offset-reset: earliest
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: alert
          destination: airport
          contentType: application/json
        event-out:
          destination: airport
          contentType: application/json