server:
  port: 8084

spring:
  application:
    name: alert
  datasource:
    url: jdbc:sqlserver://airport.database.windows.net:1433;database=airport;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  profiles:
    default:
      jpa:
        properties:
          hibernate:
            show_sql: true
            format_sql: true
            implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
            physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        database-platform: org.hibernate.dialect.SQLServer2012Dialect
        hibernate:
          ddl-auto: update
      cloud:
        stream:
          kafka:
            binder:
              brokers: localhost:9092
              consumer:
                auto-offset-reset: earliest
            streams:
              binder:
                configuration:
                  default:
                    key:
                      serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                    value:
                      serde: org.apache.kafka.common.serialization.Serdes$StringSerde
          bindings:
            event-in:
              group: alert
              destination: airport
              contentType: application/json
            event-out:
              destination: airport
              contentType: application/json
    docker:
      jpa:
        properties:
          hibernate:
            show_sql: true
            format_sql: true
            implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
            physical_naming_strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
        database-platform: org.hibernate.dialect.SQLServer2012Dialect
        hibernate:
          ddl-auto: update
      cloud:
        stream:
          kafka:
            binder:
              brokers: my-kafka:9092
              consumer:
                auto-offset-reset: earliest
            streams:
              binder:
                configuration:
                  default:
                    key:
                      serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                    value:
                      serde: org.apache.kafka.common.serialization.Serdes$StringSerde
          bindings:
            event-in:
              group: alert
              destination: airport
              contentType: application/json
            event-out:
              destination: airport
              contentType: application/json

logging:
  level:
    org.hibernate.type: info
    org.springframework.cloud: info
    org.springframework.cloud.stream: info
    org.apache.kafka: info
    airport: info
    org.hibernate.tool.hbm2ddl: debug

api:
  url:
    cctv: http://localhost:8082
    equipment: http://localhost:8083
    alert: http://localhost:8084
    member: http://localhost:8085
    notification: http://localhost:8086
    runway: http://localhost:8087
    schedule: http://localhost:8090
    auth: http://localhost:8089
    gateway: http://localhost:8088