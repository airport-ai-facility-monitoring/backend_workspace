server:
  port: 8080

spring:
  application:
    name: runwaycrack

gemini:
  api:
    key: ${GEMINI_API_KEY}

FUNCTION_KEY: ${FUNCTION_KEY}

---
spring:
  profiles: default
  datasource:
    url: jdbc:sqlserver://airportcopy27.database.windows.net:1433;database=airportcopy27;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    database-platform: org.hibernate.dialect.SQLServerDialect
    hibernate:
      ddl-auto: create
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: runwaycrack
          destination: airport
          contentType: application/json
        event-out:
          destination: airport
          contentType: application/json


logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

server:
  port: 8086

model:
  url: http://localhost:8002

---
spring:
  profiles: docker
  datasource:
    url: jdbc:sqlserver://airportcopy27.database.windows.net:1433;database=airportcopy27;encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        implicit_naming_strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl
    database-platform: org.hibernate.dialect.SQLServerDialect
    hibernate:
      ddl-auto: none
  cloud:
    stream:
      kafka:
        binder:
          brokers: my-kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        event-in:
          group: runwaycrack
          destination: airport
          contentType: application/json
        event-out:
          destination: airport
          contentType: application/json
model:
  url: http://runwaycrack:8002